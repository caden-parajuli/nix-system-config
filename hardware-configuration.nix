# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "ehci_pci"
    "xhci_pci_renesas"
    "xhci_pci"
    "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # fileSystems."/" =
  #   { device = "/dev/disk/by-uuid/904f78be-1027-4fe2-9b5c-98d19d6dde12";
  #     fsType = "btrfs";
  #     options = [ "subvol=root/active" ];
  #   };
  #
  # fileSystems."/nix" =
  #   { device = "/dev/disk/by-uuid/904f78be-1027-4fe2-9b5c-98d19d6dde12";
  #     fsType = "btrfs";
  #     options = [ "subvol=nix" ];
  #   };
  #
  # fileSystems."/home" =
  #   { device = "/dev/disk/by-uuid/904f78be-1027-4fe2-9b5c-98d19d6dde12";
  #     fsType = "btrfs";
  #     options = [ "subvol=home/active" ];
  #   };
  #
  # fileSystems."/boot" =
  #   { device = "/dev/disk/by-uuid/85B4-ACA4";
  #     fsType = "vfat";
  #     options = [ "fmask=0022" "dmask=0022" ];
  #   };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.amdgpu.initrd.enable = true;

  hardware.graphics = {
    enable = true;
    enable32Bit = true;
  };
}
